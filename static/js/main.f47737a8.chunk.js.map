{"version":3,"sources":["assets/images/logo.png","CreateSurvey/Survey.js","CreateSurvey/CreateSurvey.js","LandingPage/LandingPage.js","App.js","index.js"],"names":["module","exports","Survey","props","useState","surveyType","setSurveyType","value","id","Date","now","options","setOptions","question","setQuestion","addItem","length","className","name","onChange","evnt","target","placeholder","type","evt","map","option","key","text","newOptions","addAnswer","onClick","updateOptions","filter","removeOption","CreateSurvey","LandingPage","to","App","src","logo","alt","path","component","exact","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,kC,0SC2F5BC,EAzFA,SAACC,GAAW,IAAD,EAEaC,mBAAS,WAFtB,mBAEhBC,EAFgB,KAEJC,EAFI,OAGMF,mBAAS,CAAC,CAACG,MAAO,GAAGC,GAAGC,KAAKC,SAHnC,mBAGhBC,EAHgB,KAGRC,EAHQ,OAISR,mBAAS,IAJlB,mBAIhBS,EAJgB,KAINC,EAJM,KAkBhBC,EAAU,WACI,WAAbV,GAA0C,IAAjBM,EAAQK,QACf,UAAbX,GAAyC,IAAjBM,EAAQK,QACxCJ,EAAW,GAAD,mBAAKD,GAAL,CAAc,CAACJ,MAAO,GAAIC,GAAGC,KAAKC,WAsBhD,OACI,kBAAC,WAAD,KACI,6BACA,yBAAKO,UAAU,2BACf,4BAAQC,KAAK,SACbX,MAAOF,EACPc,SAAU,SAACC,GACPd,EAAcc,EAAKC,OAAOd,OAC1BK,EAAW,CAAC,CAACL,MAAO,GAAGC,GAAGC,KAAKC,WAE/B,4BAAQH,MAAM,WAAd,oBACA,4BAAQA,MAAM,SAAd,gBACA,4BAAQA,MAAM,UAAd,mBAKM,UAAbF,GAAqC,WAAbA,EACrB,yBAAKY,UAAU,oBACf,mDACA,2BAAOK,YAAY,sBAAsBC,KAAK,OAAOhB,MAAOM,EAAUM,SAAU,SAACK,GAASV,EAAYU,EAAIH,OAAOd,UACjH,sCACCI,EAAQc,KAAI,SAAAC,GAAM,OACf,yBAAKT,UAAU,mBAAmBU,IAAKD,EAAOlB,IAC9C,2BAAOe,KAAK,OAAOD,YAAY,gBAAgBf,MAAOmB,EAAOnB,MAAOY,SAAU,SAACK,IA1CzE,SAACI,EAAKpB,GACpB,IACMqB,EADa,YAAIlB,GACOc,KAAI,SAACC,GAC/B,OAAGA,EAAOlB,KAAKA,EACX,2BAAUkB,GAAV,IAAkBnB,MAAMqB,IAGjBF,KAGfd,EAAWiB,GAiCCC,CAAUN,EAAIH,OAAOd,MAAMmB,EAAOlB,OAEtC,uBAAGuB,QAAShB,GAAZ,UACA,uBAAGgB,QAAS,YAjCH,SAACvB,GAClB,IAAMwB,EAAgBrB,EAAQsB,QAAO,SAAAP,GAAM,OAAIA,EAAOlB,KAAOA,KAC7DI,EAAWoB,GAgCCE,CAAaR,EAAOlB,MADxB,cAKW,UAAbH,GAAwBM,EAAQK,QAAQ,GAAqB,WAAbX,GAAyBM,EAAQK,QAAQ,EAAI,6BAC3F,gDACA,4CAEF,MAEJ,QCtEKmB,G,MAVM,SAAChC,GAGlB,OACI,yBAAKc,UAAU,2BACZ,kBAAC,EAAD,S,OCYImB,G,MAlBG,SAACjC,GACf,OACI,6BACI,kBAAC,IAAD,CAAMkC,GAAG,WACL,6BACA,4BAAQpB,UAAU,wBAAlB,mBAIJ,6BACI,4BAAQA,UAAU,wBAAlB,mBCeDqB,E,uKAfX,OACE,yBAAKrB,UAAU,OACb,yBAAKsB,IAAKC,IAAMC,IAAI,SAAa,6BAEjC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWP,EAAaQ,OAAK,IAC7C,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWR,U,GAVzBU,aCHlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACA,kBAAC,EAAD,QAIFC,SAASC,eAAe,W","file":"static/js/main.f47737a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.abd255ac.png\";","import React,{useState, Fragment} from \"react\";\r\n\r\nconst Survey = (props) => {\r\n\r\n    const[surveyType, setSurveyType] = useState('default');\r\n    const[options,setOptions] = useState([{value: \"\",id:Date.now()}]);\r\n    const[question, setQuestion] = useState(''); \r\n    // const addQuestion = () =>{\r\n    //     var newSurveys=[...surveys];\r\n    //     var obj={questions: question, options:options, surveyType:surveyType}\r\n    //     //console.log(\"abc\");\r\n    //     //console.log(obj);\r\n    //     setSurveys(surveys => surveys.concat(obj))\r\n    //     // newSurveys.concat(obj)\r\n    //     var temp=surveys;\r\n    //      console.log(temp);\r\n    // }\r\n\r\n    \r\n    // add options\r\n    const addItem = () =>{\r\n        if(surveyType===\"single\" && options.length===2) return;\r\n        else if(surveyType===\"multi\" && options.length===4) return;\r\n        setOptions([...options, {value: '', id:Date.now()}]);\r\n    }\r\n    \r\n    //add answer\r\n    const addAnswer = (text,id) => {\r\n        const  optionsCopy=[...options];\r\n        const newOptions= optionsCopy.map((option) => {\r\n            if(option.id===id){\r\n                return{...option, value:text}   \r\n            }\r\n            else{\r\n                return option;\r\n            }\r\n        });\r\n        setOptions(newOptions);\r\n    }\r\n    //Delete options\r\n    const removeOption = (id) =>{\r\n        const updateOptions = options.filter(option => option.id !== id);\r\n        setOptions(updateOptions);\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <div>\r\n            <div className=\"question-type-container\">\r\n            <select name=\"survey\" \r\n            value={surveyType} \r\n            onChange={(evnt) => {\r\n                setSurveyType(evnt.target.value) \r\n                setOptions([{value: '',id:Date.now()}])\r\n                }}>\r\n                <option value=\"default\">Choose an Option</option>\r\n                <option value=\"multi\">Multi-select</option>\r\n                <option value=\"single\">Single-select</option>\r\n            </select>\r\n        </div>\r\n\r\n        {/* Conditional Rendering only render when the question type is single or multi*/}\r\n        {surveyType===\"multi\" || surveyType===\"single\" ? \r\n            <div className=\"survey-container\">\r\n            <div>Enter the Question</div>\r\n            <input placeholder=\"Enter your question\" type=\"text\" value={question} onChange={(evt) => {setQuestion(evt.target.value)}}></input>\r\n            <p>Options</p>\r\n            {options.map(option => (\r\n                <div className=\"answer-container\" key={option.id}>\r\n                <input type=\"text\" placeholder=\"Enter options\" value={option.value} onChange={(evt) => {\r\n                    addAnswer(evt.target.value,option.id)\r\n                }}></input>\r\n                <p onClick={addItem}>➕</p>\r\n                <p onClick={() => {\r\n                    removeOption(option.id)\r\n                }}>➖</p>\r\n                </div>\r\n            ))}\r\n            {(surveyType===\"multi\" && options.length>=4) ||  (surveyType===\"single\" && options.length>=2)?(<div>\r\n                <button>Add Question</button>\r\n                <button>Publish</button>\r\n            </div>) \r\n            : null}\r\n        </div>\r\n        : null}\r\n\r\n            </div>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\nexport default Survey;","import React,{useState} from \"react\";\r\nimport Survey from \"./Survey\";\r\nimport \"./_Create_Survey.css\";\r\n\r\nconst CreateSurvey = (props) => {\r\n    \r\n    \r\n    return(\r\n        <div className=\"create-survey-container\">\r\n           <Survey></Survey>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateSurvey;","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport \"./landingPage.css\";\r\nconst LandingPage=(props) => {\r\n    return(\r\n        <div>\r\n            <Link to=\"/create\">\r\n                <div>\r\n                <button className=\"landing-page-buttons\">Create Survey</button>\r\n                </div>\r\n            </Link>\r\n            \r\n            <div>\r\n                <button className=\"landing-page-buttons\">Take Survey</button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        \r\n    );\r\n}\r\nexport default LandingPage;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from \"./assets/images/logo.png\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport CreateSurvey from './CreateSurvey/CreateSurvey';\nimport LandingPage from './LandingPage/LandingPage';\n\nclass App extends Component {\n  \n\n  render(){\n    return (\n      <div className=\"App\">\n        <img src={logo} alt=\"logo\"></img><br></br>\n\n        <Switch>\n          <Route path=\"/\" component={LandingPage} exact/>\n          <Route path=\"/create\" component={CreateSurvey}/>\n        </Switch>   \n        \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}